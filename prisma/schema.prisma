// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model admin {
  id         Int       @id @default(autoincrement())
  uuid       String    @unique @default(uuid())
  username   String    @unique
  password   String
  token      String
  created_at DateTime  @default(now())
  updated_at DateTime? @updatedAt
  deleted_at DateTime?

  @@map("admins")
}

model personal_data {
  id         Int       @id @default(autoincrement())
  uuid       String    @unique @default(uuid())
  name       String
  phone      String?
  gender     GENDER
  email      String?
  created_at DateTime  @default(now())
  updated_at DateTime? @updatedAt
  deleted_at DateTime?
  client     client[]

  @@map("personal_data")
}

model client {
  id               Int           @id @default(autoincrement())
  uuid             String        @unique @default(uuid())
  personal_data    personal_data @relation(fields: [personal_data_id], references: [id])
  address          address       @relation(fields: [address_id], references: [id])
  created_at       DateTime      @default(now())
  updated_at       DateTime?     @updatedAt
  deleted_at       DateTime?
  personal_data_id Int
  address_id       Int

  @@map("clients")
}

model address {
  id           Int       @id @default(autoincrement())
  uuid         String    @unique @default(uuid())
  address      String
  number       String?
  neighborhood String
  city         String
  state        String
  zipcode      String?
  created_at   DateTime  @default(now())
  updated_at   DateTime? @updatedAt
  deleted_at   DateTime?
  client       client[]

  @@map("addresses")
}

// FAZER MODAL PARA SERVIÃ‡OS PRTESTADOS 

enum GENDER {
  M
  F
}
